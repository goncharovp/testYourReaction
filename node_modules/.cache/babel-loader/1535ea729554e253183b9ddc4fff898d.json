{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G_Test\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    };\n  }\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addField() {\n    const newCard = {\n      id: 1,\n      value: {\n        overturned: false\n      }\n    };\n    this.setState({\n      id: newCard.id,\n      word: \"\",\n      translate: \"\",\n      cards: [...this.state.cards, newCard]\n    });\n  }\n\n  turnCard(id) {\n    const cards = [...this.state.cards];\n    let index = cards.findIndex(card => {\n      return card.id === id;\n    });\n    cards[index].value.overturned = !cards[index].value.overturned;\n    this.updateInput(\"cards\", cards);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044C \\u0441\\u0432\\u043E\\u044E \\u0440\\u0435\\u0430\\u043A\\u0446\\u0438\\u044E!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn add-btn\",\n          onClick: () => this.addField(),\n          children: \"\\u0421\\u0442\\u0430\\u0440\\u0442!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.cards.map(card => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\" + (card.value.overturned ? \" overturned\" : \"\"),\n              onClick: () => this.turnCard(card.id),\n              children: card.value.overturned ? card.value.translate : card.value.word\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"output\", {\n          className: \"result\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/G_Test/my-app/src/App.js"],"names":["React","App","Component","constructor","props","state","cards","updateInput","key","value","setState","addField","newCard","id","overturned","word","translate","turnCard","index","findIndex","card","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG;AADC,KAAb;AAGH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACpB,SAAKC,QAAL,CAAc;AACV,OAACF,GAAD,GAAQC;AADE,KAAd;AAGH;;AAGDE,EAAAA,QAAQ,GAAG;AACP,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,CADO;AAEZJ,MAAAA,KAAK,EAAG;AACLK,QAAAA,UAAU,EAAG;AADR;AAFI,KAAhB;AAOA,SAAKJ,QAAL,CAAc;AACVG,MAAAA,EAAE,EAAGD,OAAO,CAACC,EADH;AAEVE,MAAAA,IAAI,EAAG,EAFG;AAGVC,MAAAA,SAAS,EAAG,EAHF;AAIVV,MAAAA,KAAK,EAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBM,OAAtB;AAJE,KAAd;AAMH;;AAEDK,EAAAA,QAAQ,CAACJ,EAAD,EAAK;AACT,UAAMP,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAd;AAEA,QAAIY,KAAK,GAAGZ,KAAK,CAACa,SAAN,CAAiBC,IAAD,IAAU;AAClC,aAAOA,IAAI,CAACP,EAAL,KAAYA,EAAnB;AACH,KAFW,CAAZ;AAIAP,IAAAA,KAAK,CAACY,KAAD,CAAL,CAAaT,KAAb,CAAmBK,UAAnB,GAAgC,CAACR,KAAK,CAACY,KAAD,CAAL,CAAaT,KAAb,CAAmBK,UAApD;AAEA,SAAKP,WAAL,CAAiB,OAAjB,EAA0BD,KAA1B;AACH;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACA;AACQ,UAAA,SAAS,EAAC,aADlB;AAEQ,UAAA,OAAO,EAAE,MAAM,KAAKV,QAAL,EAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BAGI;AAAA,oBACK,KAAKN,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAqBF,IAAI,IAAI;AAC1B,gCACI;AAEI,cAAA,SAAS,EAAE,UAAUA,IAAI,CAACX,KAAL,CAAWK,UAAX,GAAwB,aAAxB,GAAwC,EAAlD,CAFf;AAGI,cAAA,OAAO,EAAE,MAAM,KAAKG,QAAL,CAAcG,IAAI,CAACP,EAAnB,CAHnB;AAAA,wBAKKO,IAAI,CAACX,KAAL,CAAWK,UAAX,GAAwBM,IAAI,CAACX,KAAL,CAAWO,SAAnC,GAA+CI,IAAI,CAACX,KAAL,CAAWM;AAL/D,eACSK,IAAI,CAACP,EADd;AAAA;AAAA;AAAA;AAAA,oBADJ;AASH,WAVA;AADL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAVJ,eA4BI;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkCH;;AAhF6B;;AAmFlC,eAAeZ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {            \n            cards : []\n        }\n    }\n\n    updateInput(key, value) {\n        this.setState({\n            [key] : value\n        })\n    }\n\n\n    addField() {\n        const newCard = {\n            id : 1,\n            value : {\n               overturned : false\n            }\n        };\n\n        this.setState({\n            id : newCard.id,\n            word : \"\",\n            translate : \"\",\n            cards : [...this.state.cards, newCard]\n        })\n    }\n\n    turnCard(id) {\n        const cards = [...this.state.cards];\n\n        let index = cards.findIndex((card) => {\n            return card.id === id\n        });\n\n        cards[index].value.overturned = !cards[index].value.overturned;\n\n        this.updateInput(\"cards\", cards);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1 className=\"app-title\">Проверь свою реакцию!</h1>\n                <div className='upper'>\n                <button\n                        className=\"btn add-btn\"\n                        onClick={() => this.addField()}\n                    >\n                        Старт!\n                    </button>\n                </div>\n                <div className=\"container\">\n\n\n                    <div>\n                        {this.state.cards.map(card => {\n                            return(\n                                <div\n                                    key={card.id}\n                                    className={\"card\" + (card.value.overturned ? \" overturned\" : \"\")}\n                                    onClick={() => this.turnCard(card.id)}\n                                >\n                                    {card.value.overturned ? card.value.translate : card.value.word}\n                                </div>\n                            )\n                        })}\n                    </div>\n\n                </div>\n                <div>\n                    <output className = 'result'>2</output>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}